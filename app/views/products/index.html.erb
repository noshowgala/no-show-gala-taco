<p class="text-gold-100 text-xl pt-16"><span class="font-bold">TACO</span> presents</p>
<h1 class="mt-2 text-6xl">the 6th Annual <span class="font-cursive text-7xl text-gold-400">No Show Gala</span></h1>

<div class="lg:pr-48 font-light">
  <p class="text-xl mt-8 mb-8">Join us for a night of not attending while supporting San Diego’s award-winning non-profit organization.</p>
</div>

<div class="grid grid-cols-2 md:grid-cols-3 gap-2 lg:gap-8">
  <% @products.each do |product| %>
    <div data-product-id="<%= product.id %>" class="item rounded-lg relative">
      <div class="p-8 bg-white rounded-t-lg">
        <div class="flex flex-col items-center justify-center">
          <div class="w-16 h-16 flex items-center justify-center">
            <span><%= image_tag product.image %></span>
          </div>
          <div class="mt-2 text-center text-black">
            <%= "NO #{product.name.downcase}" %>
          </div>
          <div class="absolute top-4 right-4 text-black">
            <span><%= "$#{product.price}" %></span>
          </div>
        </div>
      </div>
      <%= button_tag "Add", class: "add-button w-full p-4 rounded-b-lg bg-green-700", onclick: "addToCart(this, #{product.id})" %>
      <%= button_tag "Added ✅", class: "added-button hidden w-full p-4 rounded-b-lg bg-green-900", onclick: "removeFromCart(this, #{product.id})" %>
    </div>
  <% end %>
</div>


<%= button_tag "CHECKOUT (0)", id: "checkout-button", class: "w-full bg-green-700 text-white mt-8 mb-16 py-6 text-bold rounded" %>

<script>
  function addToCart(buttonElement, productId) {
    fetch(`/donations/add_product?product_id=${productId}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
      }
    })
    .then(response => response.json())
    .then(result => {
      if (result.success) {
        // Hide the clicked "Add" button
        buttonElement.classList.add("hidden");

        // Show the corresponding "Added" button
        const addedButton = buttonElement.nextElementSibling;
        addedButton.classList.remove('hidden');

        // Increment the count on the "Checkout" button
        const checkoutButton = document.getElementById('checkout-button');
        checkoutButton.textContent = `CHECKOUT (${result.donation_count})`;
      } else {
        console.error(result.error);
      }
    })
    .catch(error => console.error('Fetch Error:', error));
  }

  function removeFromCart(buttonElement, productId) {
    fetch(`/donations/remove_product?product_id=${productId}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
      }
    })
    .then(response => response.json())
    .then(result => {
      if (result.success) {
        // Hide the clicked "Added" button
        buttonElement.classList.add('hidden');

        // Show the corresponding "Add" button
        const addButton = buttonElement.previousElementSibling;
        addButton.classList.remove("hidden")

        // Decrement the count on the "Checkout" button
        const checkoutButton = document.getElementById('checkout-button');
        checkoutButton.textContent = `CHECKOUT (${result.donation_count})`;
      } else {
        console.error(result.error);
      }
    })
    .catch(error => console.error('Fetch Error:', error));
  }

  const stripe = Stripe('<%= ENV['STRIPE_PUBLISHABLE_KEY'] %>');

  function handleCheckout() {
    const checkoutButton = document.getElementById('checkout-button');
    item_count = checkoutButton.innerText.match(/\d+/)[0];
    checkoutButton.disabled = true;
    checkoutButton.innerText = "PLEASE WAIT...";

    fetch('/donations/checkout', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      },
    })
      .then(response => response.json())
      .then(session => {
        return stripe.redirectToCheckout({ sessionId: session.id });
      })
      .then(result => {
        if (result && result.error) {
          alert(result.error.message);
        }
      })
      .catch(error => {
        console.error('Error:', error);
      })
      .finally(() => {
        // Re-enable the button and restore text in either case (success or error)
        checkoutButton.disabled = false;
        checkoutButton.innerText = `CHECKOUT (${item_count})`;
      });
  }

  document.getElementById('checkout-button').addEventListener('click', handleCheckout);
</script>
